
#==========================================================================================#
# >>>>> ПОДКЛЮЧЕНИЕ БИБЛИОТЕК И МОДУЛЕЙ <<<<< #
#==========================================================================================#

from django.db import models

#==========================================================================================#
# >>>>> МОДЕЛЬ: СОСТОЯНИЕ ЗАДАЧИ <<<<< #
#==========================================================================================#

class TaskStatus(models.Model):
    # Создание поля модели.
    status = models.CharField("Статус задачи", max_length=30)

    # Строковый вид поля.
    def __str__(self):
        return self.status

    # Отображение модели в админке Django.
    class Meta():
        verbose_name = "Статус задачи"
        verbose_name_plural = "Все статусы задач"

#==========================================================================================#
# >>>>> МОДЕЛЬ: ПОВТОРЕНИЕ ЗАДАЧИ <<<<< #
#==========================================================================================#

class TaskRepetition(models.Model):
    # Создание поля модели.
    status = models.CharField("Надо ли повторять задачу", max_length=30)

    # Строковый вид поля.
    def __str__(self):
        return self.status
    
    # Отображение модели в админке Django.
    class Meta():
        verbose_name = "Повторение задачи"
        verbose_name_plural = "Повторение задач"

#==========================================================================================#
# >>>>> МОДЕЛЬ: ЗАДАЧИ <<<<< #
#==========================================================================================#

class Task(models.Model):
    # Создание полей модели.
    title = models.CharField("Название", max_length=50)
    description = models.TextField("Описание")
    creation_time = models.TimeField(auto_now_add=True)
    status = models.ManyToManyField(TaskStatus)
    repetition = models.ManyToManyField(TaskRepetition)
    # Строковый вид поля title.
    def __str__(self):
        return self.title
    
    # Отображение модели в админке Django.
    class Meta():
        verbose_name = "Задача"
        verbose_name_plural = "Задачи"
